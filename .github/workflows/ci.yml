# .github/workflows/deploy.yml
name: Deploy MySQL Docker Image

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_HOST: 125.17.72.92  # IP address of the remote server
      REMOTE_DIR: /gitlab/lo/data  # Directory where files should be copied
     # MYSQL_ROOT_PASSWORD: ${{ vars.MYSQL_ROOT_PASSWORD }}  # GitHub secret for MySQL root password
     # MYSQL_USERNAME: ${{ vars.MYSQL_USERNAME }}  # GitHub secret for MySQL username
      PRIVATE_KEY: ${{ secrets.KEY }}  # GitHub secret for private key

    steps:
    - name: Checkout repositoryz
      uses: actions/checkout@v3

    

    - name: Set up SSH key
      run: |
        echo "$PRIVATE_KEY" > private_key
        echo "${{ vars.MYSQL_ROOT_PASSWORD }}"
        chmod 600 private_key
      

    - name: Clear and recreate remote directory
      run: ssh -o StrictHostKeyChecking=no -i private_key root@$REMOTE_HOST "rm -rf $REMOTE_DIR && mkdir -p $REMOTE_DIR && echo 'Directory $REMOTE_DIR cleaned and recreated.'"

    - name: Copy Dockerfile to remote server
      run: |
        scp -o StrictHostKeyChecking=no -i private_key Dockerfile root@$REMOTE_HOST:$REMOTE_DIR/
        scp -o StrictHostKeyChecking=no -i private_key ss root@$REMOTE_HOST:$REMOTE_DIR/

    - name: SSH into remote server and deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key root@$REMOTE_HOST
          export ${{ vars.MYSQL_ROOT_PASSWORD }} = /${{ MYSQL_ROOT_PASSWORD }}
          export ${{ vars.MYSQL_USERNAME }} = /${{ MYSQL_USERNAME }}
          cd $REMOTE_DIR
          docker build -t my-mysql-image .
          docker run -d --name my-mysql-container -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -e MYSQL_USER=$MYSQL_USERNAME -p 3306:3306 my-mysql-image:latest

