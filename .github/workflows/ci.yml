# .github/workflows/deploy.yml
name: Deploy MySQL Docker Image

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_HOST: 125.17.72.92  # IP address of the remote server
      REMOTE_DIR: /gitlab/lo/data  # Directory where files should be copied
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}  # GitHub secret for MySQL root password
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}  # GitHub secret for MySQL username
      PRIVATE_KEY: ${{ secrets.KEY }}  # GitHub secret for private key

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH key
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
      
    - name: Print environment variables (Sensitive data will be masked)
      run: |
        echo "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
        echo "MYSQL_USERNAME=${MYSQL_USERNAME}"
        echo "$MYSQL_ROOT_PASSWORD" > ss
        echo "ss is $ss"
        
    - name: Clear and recreate remote directory
      run: ssh -o StrictHostKeyChecking=no -i private_key root@$REMOTE_HOST "rm -rf $REMOTE_DIR && mkdir -p $REMOTE_DIR && echo 'Directory $REMOTE_DIR cleaned and recreated.'"

    - name: Copy Dockerfile to remote server
      run: |
        scp -o StrictHostKeyChecking=no -i private_key Dockerfile root@$REMOTE_HOST:$REMOTE_DIR/

    - name: SSH into remote server and deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key root@$REMOTE_HOST
          export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          export MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}
          
          # Print the environment variables in the remote environment
          echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" > $REMOTE_DIR/envfile
          echo "MYSQL_USERNAME=$MYSQL_USERNAME" >> $REMOTE_DIR/envfile

